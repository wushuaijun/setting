<templateSet group="Custom">
  <template name="getb" value="private $NAME$ get$NAME$() {&#10;  return ServiceFactory.getService($NAME$.class);&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="service" value="import com.searly.aroma.commons.biz.entity.OperateInfo;&#10;import com.searly.aroma.commons.biz.query.QueryDefinition;&#10;import com.searly.aroma.commons.biz.query.QueryResult;&#10;import com.searly.epiphany.mini.exception.BizServiceException;&#10;&#10;/**&#10; * @author ${USER}&#10; * @since 1.0&#10; */&#10;public interface $NAME$Service {&#10;&#10;  QueryResult&lt;$NAME$&gt; query(String tenant, QueryDefinition qd, String... parts);&#10;&#10;  $NAME$ get(String tenant, String id, String... parts);&#10;&#10;  $NAME$ safeGet(String tenant, String id, String... parts) throws BizServiceException;&#10;&#10;  $NAME$ create(String tenant, Create$NAME$Data request, OperateInfo operateInfo) throws BizServiceException;&#10;&#10;  $NAME$ modify(String tenant, Modify$NAME$Data request, OperateInfo operateInfo) throws BizServiceException;&#10;&#10;  $NAME$ sync(String tenant, $NAME$ $NAME_LOWERS$) throws BizServiceException;&#10;&#10;}&#10;" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="NAME_LOWERS" expression="decapitalize(NAME) " defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="rsService" value="&#10;import com.searly.aroma.commons.biz.query.QueryResult;&#10;import com.searly.epiphany.mini.exception.BizServiceException;&#10;import com.searly.epiphany.mini.http.Response;&#10;import com.searly.epiphany.mini.http.request.GetRequest;&#10;import com.searly.epiphany.mini.http.request.QueryRequest;&#10;import io.swagger.annotations.Api;&#10;import io.swagger.annotations.ApiOperation;&#10;import io.swagger.annotations.ApiParam;&#10;import org.springframework.web.bind.annotation.PathVariable;&#10;import org.springframework.web.bind.annotation.PostMapping;&#10;import org.springframework.web.bind.annotation.RequestBody;&#10;import org.springframework.web.bind.annotation.RequestMapping;&#10;&#10;/**&#10; * @author ${USER}&#10; * @since 1.0&#10; */&#10;@Api(tags = RS$NAME$Service.TAG)&#10;@RequestMapping(&quot;/v1/{tenant}/$NAME$&quot;)&#10;public interface RS$NAME$Service {&#10;&#10;  String TAG = &quot;---&quot;;&#10;&#10;  @ApiOperation(value = &quot;分页查询&quot;)&#10;  @PostMapping(value = &quot;/query&quot;)&#10;  Response&lt;QueryResult&lt;$NAME$&gt;&gt; query(&#10;      @ApiParam(value = &quot;租户标识&quot;) @PathVariable(&quot;tenant&quot;) String tenant,&#10;      @ApiParam(value = &quot;请求信息&quot;) @RequestBody QueryRequest request) throws BizServiceException;&#10;&#10;  @ApiOperation(value = &quot;获取&quot;)&#10;  @PostMapping(value = &quot;/get&quot;)&#10;  Response&lt;$NAME$&gt; get(&#10;      @ApiParam(value = &quot;租户标识&quot;) @PathVariable(&quot;tenant&quot;) String tenant,&#10;      @ApiParam(value = &quot;请求信息&quot;) @RequestBody GetRequest request) throws BizServiceException;&#10;&#10;  @ApiOperation(value = &quot;创建&quot;)&#10;  @PostMapping(value = &quot;/create&quot;)&#10;  Response&lt;$NAME$&gt; create(&#10;      @ApiParam(value = &quot;租户标识&quot;) @PathVariable(&quot;tenant&quot;) String tenant,&#10;      @ApiParam(value = &quot;请求信息&quot;) @RequestBody Create$NAME$Data request) throws BizServiceException;&#10;&#10;  @ApiOperation(value = &quot;修改&quot;)&#10;  @PostMapping(value = &quot;/modify&quot;)&#10;  Response&lt;$NAME$&gt; modify(&#10;      @ApiParam(value = &quot;租户标识&quot;) @PathVariable(&quot;tenant&quot;) String tenant,&#10;      @ApiParam(value = &quot;请求信息&quot;) @RequestBody Modify$NAME$Data request) throws BizServiceException;&#10;&#10;  @ApiOperation(value = &quot;同步&quot;)&#10;  @PostMapping(value = &quot;/sync&quot;)&#10;  Response&lt;$NAME$&gt; sync(&#10;      @ApiParam(value = &quot;租户标识&quot;) @PathVariable(&quot;tenant&quot;) String tenant,&#10;      @ApiParam(value = &quot;请求信息&quot;) @RequestBody $NAME$ $NAME_LOWER$) throws BizServiceException;&#10;&#10;}&#10;" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="NAME_LOWER" expression="decapitalize(NAME) " defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
</templateSet>